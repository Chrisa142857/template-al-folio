<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://ziquanw.com/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ziquanw.com/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-19T06:01:53+00:00</updated><id>https://ziquanw.com/feed.xml</id><title type="html">blank</title><subtitle>Long may the sunshine </subtitle><entry><title type="html">Ubuntu 20.04 LTS configuring Kerberos client with PAM</title><link href="https://ziquanw.com/blog/2024/kerberos-unc/" rel="alternate" type="text/html" title="Ubuntu 20.04 LTS configuring Kerberos client with PAM"/><published>2024-09-20T11:41:16+00:00</published><updated>2024-09-20T11:41:16+00:00</updated><id>https://ziquanw.com/blog/2024/kerberos-unc</id><content type="html" xml:base="https://ziquanw.com/blog/2024/kerberos-unc/"><![CDATA[<p>It’s hard to find an article showing how to configure a Kerberos client with PAM on Ubuntu 20.04 or higher. Here is the step-by-step tutorial</p> <h2 id="0-update-apt">0. Update apt</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get upgrade
</code></pre></div></div> <h2 id="1-install-packages-and-configure-kerberos-source">1. Install packages and configure Kerberos source</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>krb5-user libpam-krb5
<span class="nb">sudo </span>vim /etc/krb5.conf
</code></pre></div></div> <p>Here is an example configuration using UNC AD server:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>libdefaults]
<span class="c"># campus AD is now the authentication source</span>
default_realm <span class="o">=</span> AD.UNC.EDU
<span class="c"># for MIT Kerberos</span>
kdc_timesync <span class="o">=</span> 1
ccache_type <span class="o">=</span> 4
forwardable <span class="o">=</span> <span class="nb">true
</span>proxiable <span class="o">=</span> <span class="nb">true</span>
<span class="c"># for Heimdal Kerberos</span>
fcc-mit-ticketflags <span class="o">=</span> <span class="nb">true</span>

<span class="o">[</span>realms]
AD.UNC.EDU <span class="o">=</span> <span class="o">{</span>
    kdc <span class="o">=</span> addc0.ad.unc.edu
    kdc <span class="o">=</span> addc1.ad.unc.edu
    kdc <span class="o">=</span> addc2.ad.unc.edu
    kdc <span class="o">=</span> addc3.ad.unc.edu
    kdc <span class="o">=</span> addc4.ad.unc.edu
<span class="o">}</span>
</code></pre></div></div> <h2 id="2-enable-authentication-via-pam">2. Enable authentication via PAM</h2> <p><code class="language-plaintext highlighter-rouge">sudo pam-auth-update</code></p> <p>Make sure you selected Kerberos authentication and do not select Unix, which has a higher priority.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/post_kerberos-480.webp 480w,/assets/img/post_kerberos-800.webp 800w,/assets/img/post_kerberos-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/post_kerberos.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Screenshot: PAM configuration. </div> <h2 id="3-verify-the-connection-between-kerberos-server">3. Verify the connection between Kerberos server</h2> <p><code class="language-plaintext highlighter-rouge">kinit OnyenName</code></p> <h2 id="4-add-users-and-verify-the-authentication">4. Add users and verify the authentication</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>adduser <span class="nt">--home</span> /path/to/home OnyenName
<span class="nb">sudo </span>login
</code></pre></div></div>]]></content><author><name></name></author><category term="linux"/><category term="Ubuntu"/><category term="20.04,"/><category term="Kerberos,"/><category term="PAM,"/><category term="UNC"/><summary type="html"><![CDATA[Take UNC Onyen server as an example]]></summary></entry><entry><title type="html">Visualize your NN to see which channels are important</title><link href="https://ziquanw.com/blog/2024/nnplot/" rel="alternate" type="text/html" title="Visualize your NN to see which channels are important"/><published>2024-03-14T17:39:00+00:00</published><updated>2024-03-14T17:39:00+00:00</updated><id>https://ziquanw.com/blog/2024/nnplot</id><content type="html" xml:base="https://ziquanw.com/blog/2024/nnplot/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><category term="research"/><category term="PyTorch,"/><category term="Visualization,"/><category term="NN"/><summary type="html"><![CDATA[Check few lines of Python to visualize your own PyTorch NN]]></summary></entry><entry><title type="html">Extracting RoI BOLD signal of fMRI dataset by using CONN toolbox, using OASIS3 as an example</title><link href="https://ziquanw.com/blog/2023/conn-toolbox/" rel="alternate" type="text/html" title="Extracting RoI BOLD signal of fMRI dataset by using CONN toolbox, using OASIS3 as an example"/><published>2023-05-24T11:41:16+00:00</published><updated>2023-05-24T11:41:16+00:00</updated><id>https://ziquanw.com/blog/2023/conn-toolbox</id><content type="html" xml:base="https://ziquanw.com/blog/2023/conn-toolbox/"><![CDATA[<p>This blog is a hand-by-hand tutorial for researchers who in <a href="https://acmlab.org/">ACMLab</a> to process MRI data. In the meantime, make an effort for the development of the computational neuroimaging field.</p> <h2 id="0-install-software">0. Install Software</h2> <ul> <li>Matlab.</li> <li>CONN toolbox (Download .zip: link. Source page: link). Unzip it.</li> <li>SPM (Download .zip: link. Source page: link). Unzip it.</li> <li>Start Matlab, click on the ‘Set path’ button, then click on ‘Add folder’, and select your CONN installation folder (e.g. /software/conn). After this, click again on ‘Add folder’ and now select the SPM installation folder (e.g. /software/spm12). Click on ‘Save’ and ‘Close’ to save these changes for future Matlab sessions</li> </ul> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/post_conn_1-480.webp 480w,/assets/img/post_conn_1-800.webp 800w,/assets/img/post_conn_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/post_conn_1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Screenshot: Set path in Matlab. </div> <ul> <li>Install python <ul> <li>Install a miniconda and python</li> <li>Create an environment. Activate it.</li> <li>Use <code class="language-plaintext highlighter-rouge">pip install nibabel numpy scipy</code></li> </ul> </li> </ul> <h2 id="i-what-data-do-you-have-the-input">I. What data do you have: The input</h2> <p>Briefly, you need to collect all paths of the input T1w and fMRI volume, and remap the raw atlas label to 1~N with the corresponding label name in .txt file.</p> <p><strong>One input of CONN toolbox is termed as <code class="language-plaintext highlighter-rouge">Subject</code>. It has one T1w and multiple fMRI.</strong></p> <ol> <li>One T1-weighted (T1w) MRI volume (3D) for each subject. For each subject, one T1w volume is enough. You need to check the T1w you are collecting is in a valid format by reading the file header, like orientation and dimension. For example, OASIS3 T1w volume’s orientation is indicated by header<code class="language-plaintext highlighter-rouge">['qform_code'] == 1</code>. And, the volume file name with ‘echo’ means it is 2D, which is not valid. Collect all paths in a file, where each line is one T1w of a subject.</li> <li>At least one functional MRI volume (4D) at rest state or any task. There might be multiple sessions and runs of fMRI scans for each subject. The pipeline requires the fMRI in one <code class="language-plaintext highlighter-rouge">subject</code> to have the same shape. So, you need to check the <code class="language-plaintext highlighter-rouge">header['dim']</code> of each fMRI to be the same. Otherwise, let it be a new <code class="language-plaintext highlighter-rouge">subject</code> with corresponding T1w volume. After data paths of T1w and fMRI are collected, you need to make sure how many fMRI sessions are matched to one T1w volume. And save those numbers.</li> <li>Any atlas label volume (3D) in the MNI space, along with the look-up table. Raw atlas files vary and depend on publishers. They might be in the surface format, if so, you need to convert it to volume first. Then, let the original label ID of the atlas volume remap to <code class="language-plaintext highlighter-rouge">[1, N]</code>, where N is the number of RoI. Along with the remapped atlas, the label name needs to be generated into a Txt file as the template in CONN toolbox.</li> </ol> <h2 id="ii-conn-step-1">II. CONN step #1</h2> <ol> <li>Load the path of T1w, fMRI, and RoI: Copy path of subjects into CONN toolbox</li> <li>Click preprocessing: Registration, segmentation</li> <li>Click Done: Extract RoI</li> </ol> <h2 id="iii-conn-step-2">III. CONN step #2</h2> <ol> <li>Choose all RoIs in the list: Set all RoIs for the following process</li> <li> <p>Click Done: Regression RoIs</p> </li> <li>Check output: We are done with CONN toolbox part. Go to the output directory and check this path.</li> </ol> <h2 id="iv-get-the-output">IV. Get the output</h2> <p>BOLD timeseries are saved in <code class="language-plaintext highlighter-rouge">.mat</code> files.</p>]]></content><author><name></name></author><category term="neuroscience"/><category term="SPM,"/><category term="CONN"/><category term="toolbox,"/><category term="OASIS,"/><category term="Natlab,"/><category term="sMRI,"/><category term="fMRI"/><summary type="html"><![CDATA[fMRI data preprocessing]]></summary></entry></feed>